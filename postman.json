{
    "info": {
        "_postman_id": "ac1842f2-86d6-4c1f-8611-b8950f3e7cbe",
        "name": "Hcode Store",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Address",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/address?_limit=100&_offset=0&_sortBy=id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "address"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "100"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "<small>/address</small>\n### Retorna todos os endereços do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, idPerson, idCity, idStreetType, publicPlace, number, district, complement, reference, zipCode, dateRegister, dateLastChange)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/address/{{addressId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "address",
                                "{{addressId}}"
                            ]
                        },
                        "description": "<small>/address/{idAddress}</small>\n### Retorna o endereço a partir do ID informado na URL\n\n##### Route Params\n- **INT** idAddress: ID do endereço."
                    },
                    "response": []
                },
                {
                    "name": "GET BY USER",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});\r",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/address",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "address"
                            ]
                        },
                        "description": "<small>/user/{idUser}/address</small>\n### Retorna o endereço do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newAddessId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idPerson",
                                    "value": "{{personId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idCity",
                                    "value": "{{cityId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idStreetType",
                                    "value": "{{streetTypeId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "publicPlace",
                                    "value": "José Rui Lino",
                                    "type": "text"
                                },
                                {
                                    "key": "number",
                                    "value": "419",
                                    "type": "text"
                                },
                                {
                                    "key": "district",
                                    "value": "Raimundo Chaar",
                                    "type": "text"
                                },
                                {
                                    "key": "complement",
                                    "value": "Casa",
                                    "type": "text"
                                },
                                {
                                    "key": "reference",
                                    "value": "Referência",
                                    "type": "text"
                                },
                                {
                                    "key": "zipCode",
                                    "value": "69932000",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/address",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "address"
                            ]
                        },
                        "description": "<small>/address</small>\n### Salva o endereço informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** idPerson: ID da pessoa do endereço;\n- **INT** idCity: ID da cidade do endereço;\n- **INT** idStreetType (*opcional*): ID do tipo de logradouro do endereço;\n- **STR** publicPlace: Logradouro do endereço;\n- **STR** number: Número do endereço;\n- **STR** district (*opcional*): Bairro do endereço;\n- **STR** complement: Complemento do endereço;\n- **STR** reference (*opcional*): Referência do endereço;\n- **INT** zipCode: CEP do endereço."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idCity",
                                    "value": "{{cityId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idStreetType",
                                    "value": "{{streetTypeId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "publicPlace",
                                    "value": "12 de Abril",
                                    "type": "text"
                                },
                                {
                                    "key": "number",
                                    "value": "56",
                                    "type": "text"
                                },
                                {
                                    "key": "district",
                                    "value": "Vila Nova",
                                    "type": "text"
                                },
                                {
                                    "key": "complement",
                                    "value": "Casa com portão de madeira",
                                    "type": "text"
                                },
                                {
                                    "key": "reference",
                                    "value": "Próximo a distribuidora de gás",
                                    "type": "text"
                                },
                                {
                                    "key": "zipCode",
                                    "value": "69921082",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/address/{{newAddessId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "address",
                                "{{newAddessId}}"
                            ]
                        },
                        "description": "<small>/address/{idAddress}</small>\n### Altera os dados do endereço informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idAddress: ID do endereço.\n\n##### Body Params\n- **INT** idCity: ID da cidade do endereço;\n- **INT** idStreetType (*opcional*): ID do tipo de logradouro do endereço;\n- **STR** publicPlace: Logradouro do endereço;\n- **STR** number: Número do endereço;\n- **STR** district (*opcional*): Bairro do endereço;\n- **STR** complement: Complemento do endereço;\n- **STR** reference (*opcional*): Referência do endereço;\n- **INT** zipCode: CEP do endereço."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/address/{{newAddessId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "address",
                                "{{newAddessId}}"
                            ]
                        },
                        "description": "<small>/address/{idAddress}</small>\n### Remove o endereço a partir do ID informado na URL\n\n##### Route Params\n- **INT** idAddress: ID do endereço."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Authenticate",
            "item": [
                {
                    "name": "LOGIN",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY / SESSION COOKIE\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "    pm.expect(pm.cookies.has(\"HcodeStore\")).to.be.true;\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"sessionUserId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "login",
                                    "value": "alfredo",
                                    "type": "text"
                                },
                                {
                                    "key": "password",
                                    "value": "alfredo",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "login"
                            ]
                        },
                        "description": "<small>/login</small>\n### Realiza a autenticação do usuário\n\n##### Body Params\n- **STR** login: Identificação para autenticação;\n- **STR** password: Senha de acesso."
                    },
                    "response": []
                },
                {
                    "name": "LOGOUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "logout"
                            ]
                        },
                        "description": "<small>/logout</small>\n### Realiza a desvinculação do usuário da sessão"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Cart",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/cart?_limit=10&_offset=0&_sortBy=sessionId",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "10"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "sessionId"
                                }
                            ]
                        },
                        "description": "<small>/cart</small>\n### Retorna todos os carrinhos do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, sessionId, idUser, idAddress, temporaryZipCode, freightValue, freightType, days, dateRegister)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{cartId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{cartId}}"
                            ]
                        },
                        "description": "<small>/cart/{idCart}</small>\n### Retorna o carrinho a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho."
                    },
                    "response": []
                },
                {
                    "name": "GET PRODUCTS",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{cartId}}/product",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{cartId}}",
                                "product"
                            ]
                        },
                        "description": "<small>/cart/{idCart}/product</small>\n### Retorna os produtos do carrinho a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newCartId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "temporaryZipCode",
                                    "value": "86047622",
                                    "type": "text"
                                },
                                {
                                    "key": "freightValue",
                                    "value": "10.25",
                                    "type": "default",
                                    "disabled": true
                                },
                                {
                                    "key": "freightType",
                                    "value": "Formato rolo/prisma",
                                    "type": "default",
                                    "disabled": true
                                },
                                {
                                    "key": "days",
                                    "value": "3",
                                    "type": "default",
                                    "disabled": true
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/cart",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart"
                            ]
                        },
                        "description": "<small>/cart</small>\n### Salva o carrinho informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** temporaryZipCode (*opcional*): CEP temporário;\n- **FLT** freightValue (*opcional*): Valor do frete;\n- **STR** freightType (*opcional*): Tipo do frete;\n- **INT** days (*opcional*): Dias para entrega."
                    },
                    "response": []
                },
                {
                    "name": "ADD PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "quantity",
                                    "value": "2",
                                    "type": "default"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{newCartId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{newCartId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/cart/{idCart}/product/{idProduct}</small>\n### Adiciona um produto ao carrinho a partir dos IDs informados na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho;\n- **INT** idProduct: ID do produto.\n\n##### Body Params\n- **INT** quantity (*opcional*): Quantidade de produtos."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idUser",
                                    "value": "{{sessionUserId}}",
                                    "type": "default"
                                },
                                {
                                    "key": "idAddress",
                                    "value": "{{addressId}}",
                                    "type": "default"
                                },
                                {
                                    "key": "temporaryZipCode",
                                    "value": "86050901",
                                    "type": "text"
                                },
                                {
                                    "key": "freightValue",
                                    "value": "30.49",
                                    "type": "default"
                                },
                                {
                                    "key": "freightType",
                                    "value": "Formato caixa/pacote",
                                    "type": "default"
                                },
                                {
                                    "key": "days",
                                    "value": "5",
                                    "type": "default"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{newCartId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{newCartId}}"
                            ]
                        },
                        "description": "<small>/cart/{idCart}</small>\n### Altera os dados do carrinho informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho.\n\n##### Body Params\n- **INT** idUser (*opcional*): ID do usuário;\n- **INT** idAddress (*opcional*): ID do endereço;\n- **INT** temporaryZipCode (*opcional*): CEP temporário;\n- **FLT** freightValue (*opcional*): Valor do frete;\n- **STR** freightType (*opcional*): Tipo do frete;\n- **INT** days (*opcional*): Dias para entrega."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{newCartId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{newCartId}}"
                            ]
                        },
                        "description": "<small>/cart/{idCart}</small>\n### Remove o carrinho a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho."
                    },
                    "response": []
                },
                {
                    "name": "REMOVE PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "removeAll",
                                    "value": "true",
                                    "type": "default",
                                    "disabled": true
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/cart/{{newCartId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "cart",
                                "{{newCartId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/cart/{idCart}/product/{idProduct}</small>\n### Remove um produto do carrinho a partir dos IDs informados na URL\n\n##### Route Params\n- **INT** idCart: ID do carrinho;\n- **INT** idProduct: ID do produto.\n\n##### Body Params\n- **BOOL** removeAll (*opcional*): Remove todos os produtos?"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Category",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category?_limit=15&_offset=0&_sortBy=idSuper",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "15"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "idSuper"
                                }
                            ]
                        },
                        "description": "<small>/category</small>\n### Retorna todas as categorias do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, name, slug, idSuper, dateRegister, dateLastChange)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category/{{categoryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{categoryId}}"
                            ]
                        },
                        "description": "<small>/category/{idCategory}</small>\n### Retorna a categoria a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newCategoryId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Samsung",
                                    "type": "text"
                                },
                                {
                                    "key": "slug",
                                    "value": "samsung",
                                    "type": "text"
                                },
                                {
                                    "key": "idSuper",
                                    "value": "{{superCategoryId}}",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/category",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category"
                            ]
                        },
                        "description": "<small>/category</small>\n### Salva a categoria informada no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** name: Nome da categoria;\n- **STR** slug: Slug da categoria;\n- **INT** idSuper (*opcional*): ID da categoria mãe."
                    },
                    "response": []
                },
                {
                    "name": "ADD PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category/{{newCategoryId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{newCategoryId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/category/{idCategory}/product/{idProduct}</small>\n### Vincula um produto a uma determinada categoria a partir dos IDs informados na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria;\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Motorola",
                                    "type": "text"
                                },
                                {
                                    "key": "slug",
                                    "value": "motorola",
                                    "type": "text"
                                },
                                {
                                    "key": "idSuper",
                                    "value": "{{superCategoryId}}",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/category/{{newCategoryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{newCategoryId}}"
                            ]
                        },
                        "description": "<small>/category/{idCategory}</small>\n### Altera os dados da categoria informada no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria.\n\n##### Body Params\n- **STR** name: Nome da categoria;\n- **STR** slug: Slug da categoria;\n- **INT** idSuper (*opcional*): ID da categoria mãe."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category/{{newCategoryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{newCategoryId}}"
                            ]
                        },
                        "description": "<small>/category/{idCategory}</small>\n### Remove a categoria a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria."
                    },
                    "response": []
                },
                {
                    "name": "REMOVE PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category/{{newCategoryId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{newCategoryId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/category/{idCategory}/product/{idProduct}</small>\n### Remove o vínculo de um produto em uma determinada categoria a partir dos IDs informados na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria;\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "City",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/city?_limit=100&_offset=0&_sortBy=dateRegister",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "city"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "100"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "dateRegister"
                                }
                            ]
                        },
                        "description": "<small>/city</small>\n### Retorna todas as cidades do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, idCountry, ibgeCode, name, uf, dateRegister)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/city/{{cityId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "city",
                                "{{cityId}}"
                            ]
                        },
                        "description": "<small>/city/{idCity}</small>\n### Retorna a cidade a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCity: ID da cidade."
                    },
                    "response": []
                },
                {
                    "name": "GET BY STATE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/state/{{stateId}}/city",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state",
                                "{{stateId}}",
                                "city"
                            ]
                        },
                        "description": "<small>/state/{idState}/city</small>\n### Retorna as cidades do estado a partir do ID informado na URL\n\n##### Route Params\n- **INT** idState: ID do estado."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newCityId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idState",
                                    "value": "{{stateId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "ibgeCode",
                                    "value": "4106902",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Curitiba",
                                    "type": "text"
                                },
                                {
                                    "key": "ddd",
                                    "value": "41",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/city",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "city"
                            ]
                        },
                        "description": "<small>/city</small>\n### Salva a cidade informada no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** idState: ID do estado da cidade;\n- **INT** ibgeCode (*opcional*): Código IBGE da cidade;\n- **STR** name: Nome da cidade;\n- **STR** ddd (*opcional*): Código DDD da cidade."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idState",
                                    "value": "{{stateId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "ibgeCode",
                                    "value": "3304557",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Rio de Janeiro",
                                    "type": "text"
                                },
                                {
                                    "key": "ddd",
                                    "value": "21",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/city/{{newCityId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "city",
                                "{{newCityId}}"
                            ]
                        },
                        "description": "<small>/city/{idCity}</small>\n### Altera os dados da cidade informada no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCity: ID da cidade.\n\n##### Body Params\n- **INT** idState: ID do estado da cidade;\n- **INT** ibgeCode (*opcional*): Código IBGE da cidade;\n- **STR** name: Nome da cidade;\n- **STR** ddd (*opcional*): Código DDD da cidade."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/city/{{newCityId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "city",
                                "{{newCityId}}"
                            ]
                        },
                        "description": "<small>/city/{idCity}</small>\n### Remove a cidade a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCity: ID da cidade."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Contact",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/contact?_limit=30&_offset=0&_sortBy=email",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contact"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "30"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "email"
                                }
                            ]
                        },
                        "description": "<small>/contact</small>\n### Retorna todos os contatos do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, name, email, subject, message, dateRegister)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/contact/{{contactId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contact",
                                "{{contactId}}"
                            ]
                        },
                        "description": "<small>/contact/{idContact}</small>\n### Retorna o contato a partir do ID informado na URL\n\n##### Route Params\n- **INT** idContact: ID do contato."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newContactId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "PHP Hypertext Preprocessor",
                                    "type": "text"
                                },
                                {
                                    "key": "email",
                                    "value": "php@luizamichi.com.br",
                                    "type": "text"
                                },
                                {
                                    "key": "subject",
                                    "value": "PHP 8.2 lançado",
                                    "type": "default"
                                },
                                {
                                    "key": "message",
                                    "value": "O PHP 8.2 é uma grande atualização da linguagem PHP.\nEle contém muitos recursos novos, incluindo classes somente leitura, null, false e true como tipos autônomos, propriedades dinâmicas obsoletas, melhorias de desempenho e muito mais.",
                                    "type": "default"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/contact",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contact"
                            ]
                        },
                        "description": "<small>/contact</small>\n### Salva o contato informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** name: Nome do contato;\n- **STR** email: E-mail do contato;\n- **STR** subject: Assunto do contato;\n- **STR** message: Mensagem do contato."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Python",
                                    "type": "text"
                                },
                                {
                                    "key": "email",
                                    "value": "python@luizamichi.com.br",
                                    "type": "text"
                                },
                                {
                                    "key": "subject",
                                    "value": "Bem-vindo ao Python",
                                    "type": "default"
                                },
                                {
                                    "key": "message",
                                    "value": "Python é uma linguagem de programação que permite trabalhar rapidamente e integrar sistemas de forma mais eficaz.",
                                    "type": "default"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/contact/{{newContactId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contact",
                                "{{newContactId}}"
                            ]
                        },
                        "description": "<small>/contact/{idContact}</small>\n### Altera os dados do contato informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idContact: ID do contato.\n\n##### Body Params\n- **STR** name: Nome do contato;\n- **STR** email: E-mail do contato;\n- **STR** subject: Assunto do contato;\n- **STR** message: Mensagem do contato."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/contact/{{newContactId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "contact",
                                "{{newContactId}}"
                            ]
                        },
                        "description": "<small>/contact/{idContact}</small>\n### Remove o contato a partir do ID informado na URL\n\n##### Route Params\n- **INT** idContact: ID do contato."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Country",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/country?_limit=40&_offset=5&_sortBy=coi",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "40"
                                },
                                {
                                    "key": "_offset",
                                    "value": "5"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "coi"
                                }
                            ]
                        },
                        "description": "<small>/country</small>\n### Retorna todos os países do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, ibgeCode, name, coi, ddi)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/country/{{countryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country",
                                "{{countryId}}"
                            ]
                        },
                        "description": "<small>/country/{idCountry}</small>\n### Retorna o país a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCountry: ID do país."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newCountryId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "ibgeCode",
                                    "value": "2496",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Estados Unidos",
                                    "type": "text"
                                },
                                {
                                    "key": "coi",
                                    "value": "USA",
                                    "type": "text"
                                },
                                {
                                    "key": "ddi",
                                    "value": "1",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/country",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country"
                            ]
                        },
                        "description": "<small>/country</small>\n### Salva o país informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** ibgeCode (*opcional*): Código IBGE do país;\n- **STR** name: Nome do país;\n- **STR** coi: Código COI do país;\n- **INT** ddi (*opcional*): Código internacional de telefone do país."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "ibgeCode",
                                    "value": "1600",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "China",
                                    "type": "text"
                                },
                                {
                                    "key": "coi",
                                    "value": "CHN",
                                    "type": "text"
                                },
                                {
                                    "key": "ddi",
                                    "value": "86",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/country/{{newCountryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country",
                                "{{newCountryId}}"
                            ]
                        },
                        "description": "<small>/country/{idCountry}</small>\n### Altera os dados do país informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCountry: ID do país.\n\n##### Body Params\n- **INT** ibgeCode (*opcional*): Código IBGE do país;\n- **STR** name: Nome do país;\n- **STR** coi: Código COI do país;\n- **INT** ddi (*opcional*): Código internacional de telefone do país."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/country/{{newCountryId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country",
                                "{{newCountryId}}"
                            ]
                        },
                        "description": "<small>/country/{idCountry}</small>\n### Remove o país a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCountry: ID do país."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Mail",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/mail?_limit=10&_offset=1&_sortBy=id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "mail"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "10"
                                },
                                {
                                    "key": "_offset",
                                    "value": "1"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "id"
                                }
                            ]
                        },
                        "description": "<small>/mail</small>\n### Retorna todos os e-mails do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, email, name, subject, content, files, isSent, dateRegister, dateLastChange)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/mail/{{mailId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "mail",
                                "{{mailId}}"
                            ]
                        },
                        "description": "<small>/mail/{idMail}</small>\n### Retorna o e-mail a partir do ID informado na URL\n\n##### Route Params\n- **INT** idMail: ID do e-mail."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newMailId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "email",
                                    "value": "eu@luizamichi.com.br",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Luiz Joaquim Aderaldo Amichi",
                                    "type": "text"
                                },
                                {
                                    "key": "subject",
                                    "value": "[Hcode Store] Promoções do mês",
                                    "type": "text"
                                },
                                {
                                    "key": "content",
                                    "value": "Olá, confira as nossas promoções imperdíveis desta semana.\n\n- Jaqueta masculina por R$ 84,99;\n- Perfume masculino 50ml por 121,98;\n- Perfume feminino 75ml por 334,82.\n\nNão fique de fora!\nAcesse agora nosso e-commerce e garanta já a sua compra.",
                                    "type": "text"
                                },
                                {
                                    "key": "files[]",
                                    "value": "/res/multiShop/img/offer-1.jpg",
                                    "type": "text"
                                },
                                {
                                    "key": "files[]",
                                    "value": "/res/multiShop/img/offer-2.jpg",
                                    "type": "default"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/mail",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "mail"
                            ]
                        },
                        "description": "<small>/mail</small>\n### Salva o e-mail informado no corpo da requisição no banco de dados e envia\n\n##### Body Params\n- **STR** email: E-mail da pessoa;\n- **STR** name: Nome da pessoa;\n- **STR** subject: Assunto do e-mail;\n- **STR** content: Conteúdo do e-mail;\n- **ARR** files (*opcional*): Anexos do e-mail;\n- **BOOL** isSent (*opcional*): E-mail foi enviado?"
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "email",
                                    "value": "dominio@luizamichi.com.br",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Domínio - Luiz Amichi",
                                    "type": "text"
                                },
                                {
                                    "key": "subject",
                                    "value": "[Hcode Store] Confirmação de cadastro",
                                    "type": "text"
                                },
                                {
                                    "key": "content",
                                    "value": "Olá, precisamos confirmar que foi você mesmo que realizou o cadastro em nossa plataforma.\nPor favor, realize o login em nosso site para confirmarmos sua identidade.\nSe você não realizou o cadastro em nossa plataforma, por favor, entre em contato conosco imediatamente.\n\nAtenciosamente,\nHcode Store",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/mail/{{newMailId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "mail",
                                "{{newMailId}}"
                            ]
                        },
                        "description": "<small>/mail/{idMail}</small>\n### Altera os dados do e-mail informado no corpo da requisição a partir do ID informado na URL e envia\n\n##### Route Params\n- **INT** idMail: ID do e-mail.\n\n##### Body Params\n- **STR** email: E-mail da pessoa;\n- **STR** name: Nome da pessoa;\n- **STR** subject: Assunto do e-mail;\n- **STR** content: Conteúdo do e-mail;\n- **ARR** files (*opcional*): Anexos do e-mail;\n- **BOOL** isSent (*opcional*): E-mail foi enviado?"
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/mail/{{newMailId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "mail",
                                "{{newMailId}}"
                            ]
                        },
                        "description": "<small>/mail/{idMail}</small>\n### Remove o e-mail a partir do ID informado na URL\n\n##### Route Params\n- **INT** idMail: ID do e-mail."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Order",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/order?_limit=100&_offset=0&_sortBy=code",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "100"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "code"
                                }
                            ]
                        },
                        "description": "<small>/order</small>\n### Retorna todos os pedidos do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, idCart, idUser, idStatus, totalValue, code, annotation, dateRegister)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/order/{{orderId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order",
                                "{{orderId}}"
                            ]
                        },
                        "description": "<small>/order/{idOrder}</small>\n### Retorna o pedido a partir do ID informado na URL\n\n##### Route Params\n- **INT** idOrder: ID do pedido."
                    },
                    "response": []
                },
                {
                    "name": "GET BANK PAYMENT SLIP",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/order/{{orderId}}/bankpaymentslip",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order",
                                "{{orderId}}",
                                "bankpaymentslip"
                            ]
                        },
                        "description": "<small>/order/{idOrder}/bankpaymentslip</small>\n### Retorna o boleto de pagamento do pedido a partir do ID informado na URL\n\n##### Route Params\n- **INT** idOrder: ID do pedido."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newOrderId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idCart",
                                    "value": "{{cartId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idUser",
                                    "value": "{{sessionUserId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idStatus",
                                    "value": "{{orderStatusId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idAddress",
                                    "value": "{{addressId}}",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/order",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order"
                            ]
                        },
                        "description": "<small>/order</small>\n### Salva o pedido informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** idCart: ID do carrinho do pedido;\n- **INT** idUser: ID do usuário do pedido;\n- **INT** idStatus: ID do status do pedido;\n- **INT** idAddress: ID do endereço do pedido."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idCart",
                                    "value": "{{cartId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idUser",
                                    "value": "{{userId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idStatus",
                                    "value": "{{orderStatusId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "idAddress",
                                    "value": "{{addressId}}",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/order/{{newOrderId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order",
                                "{{newOrderId}}"
                            ]
                        },
                        "description": "<small>/order/{idOrder}</small>\n### Altera os dados do pedido informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idOrder: ID do pedido.\n\n##### Body Params\n- **INT** idCart: ID do carrinho do pedido;\n- **INT** idUser: ID do usuário do pedido;\n- **INT** idStatus: ID do status do pedido;\n- **INT** idAddress: ID do endereço do pedido."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/order/{{newOrderId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "order",
                                "{{newOrderId}}"
                            ]
                        },
                        "description": "<small>/order/{idOrder}</small>\n### Remove o pedido a partir do ID informado na URL\n\n##### Route Params\n- **INT** idOrder: ID do pedido."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Order Status",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/orderstatus?_limit=10&_offset=0&_sortBy=description",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "orderstatus"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "10"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "description"
                                }
                            ]
                        },
                        "description": "<small>/orderstatus</small>\n### Retorna todos os status de pedidos do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, description, code, dateRegister)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/orderstatus/{{orderStatusId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "orderstatus",
                                "{{orderStatusId}}"
                            ]
                        },
                        "description": "<small>/orderstatus/{idStatus}</small>\n### Retorna o status de pedido a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStatus: ID do status de pedido."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newOrderStatusId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "description",
                                    "value": "Feedback recebido",
                                    "type": "text"
                                },
                                {
                                    "key": "code",
                                    "value": "7",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/orderstatus",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "orderstatus"
                            ]
                        },
                        "description": "<small>/orderstatus</small>\n### Salva o status de pedido informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** description: Descrição do status de pedido;\n- **INT** code: Código do status de pedido."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "description",
                                    "value": "Pedido finalizado",
                                    "type": "text"
                                },
                                {
                                    "key": "code",
                                    "value": "7",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/orderstatus/{{newOrderStatusId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "orderstatus",
                                "{{newOrderStatusId}}"
                            ]
                        },
                        "description": "<small>/orderstatus/{idStatus}</small>\n### Altera os dados do status de pedido informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStatus: ID do status de pedido.\n\n##### Body Params\n- **STR** description: Descrição do status de pedido;\n- **INT** code: Código do status de pedido."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/orderstatus/{{newOrderStatusId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "orderstatus",
                                "{{newOrderStatusId}}"
                            ]
                        },
                        "description": "<small>/orderstatus/{idStatus}</small>\n### Remove o status de pedido a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStatus: ID do status de pedido."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Other",
            "item": [
                {
                    "name": "STATUS",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/status",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "status"
                            ]
                        },
                        "description": "<small>/status</small>\n### Retorna o status do web service"
                    },
                    "response": []
                },
                {
                    "name": "SESSION",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/session",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "session"
                            ]
                        },
                        "description": "<small>/session</small>\n### Retorna os dados armazenados na sessão"
                    },
                    "response": []
                },
                {
                    "name": "ERROR",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 404 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(404);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/notfound",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "notfound"
                            ]
                        },
                        "description": "<small>/{route}</small>\n### Retorna o JSON de erro de acesso 404"
                    },
                    "response": []
                },
                {
                    "name": "ZIP CODE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/zipcode/86047622",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "zipcode",
                                "86047622"
                            ]
                        },
                        "description": "<small>/zipcode/{zipCode}</small>\n### Retorna os dados de um endereço a partir do CEP informado na URL\n\n##### Route Params\n- **STR** zipCode: CEP do endereço."
                    },
                    "response": []
                },
                {
                    "name": "SQL QUERY",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "query",
                                    "value": "SELECT * FROM vw_addresses;",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/sqlquery",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "sqlquery"
                            ]
                        },
                        "description": "<small>/sqlquery</small>\n### Realiza uma consulta no banco de dados\n\n##### Body Params\n- **STR** query: Consulta SQL."
                    },
                    "response": []
                },
                {
                    "name": "PHP EVAL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "code",
                                    "value": "$php = PHP_VERSION;\n$os = PHP_OS;\nreturn \"Versão PHP: $php\" . PHP_EOL . \"Sistema Operacional: $os\";",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/phpeval",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "phpeval"
                            ]
                        },
                        "description": "<small>/phpeval</small>\n### Realiza uma execução de código no PHP\n\n##### Body Params\n- **STR** code: Código PHP."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Product",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/product?_limit=15&_offset=0&_sortBy=slug",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "product"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "15"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "slug"
                                }
                            ]
                        },
                        "description": "<small>/product</small>\n### Retorna todos os produtos do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, name, description, image, price, width, height, length, weight, stockQuantity, isNational, slug, dateRegister, dateLastChange)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/product/{idProduct}</small>\n### Retorna o produto a partir do ID informado na URL\n\n##### Route Params\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                },
                {
                    "name": "GET BY CATEGORY",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/category/{{categoryId}}/product",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "category",
                                "{{categoryId}}",
                                "product"
                            ]
                        },
                        "description": "<small>/category/{idCategory}/product</small>\n### Retorna os produtos da categoria a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCategory: ID da categoria."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newProductId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "name",
                                    "value": "Smart TV Samsung 70 Crystal UHD 4K",
                                    "type": "text"
                                },
                                {
                                    "key": "description",
                                    "value": "Com a Tecnologia Dynamic Crystal Color, a sua Smart TV Samsung 70 Crystal UHD 4K possui cores mais puras e reais além de um um novo nível de imagens em ultrarresolução. Desfrute de uma imagem mais natural e detalhada com a tecnologia inovadora, que analisa as regiões da tela e ajusta automaticamente o constraste dando mais cor e profundidade, em qualquer conteúdo.\nSeja na parede ou no rack, a Smart TV Crystal UHD 4K da Samsung possui um Design slim com apenas 2,5cm de espessura combinará perfeitamente com seu espaço. Sem contar com o processador Crystal 4K transforma tudo a que você assiste em resolução próxima à 4K. Além de possuir o Novo SmartHub onde você gastará menos tempo pesquisando e mais tempo assistindo a programas que você gosta, graças à experiência otimizada de pesquisa, que sugere conteúdos com base em como você usa sua TV.\nAcessando o aplicativo SmartThings, você controla e monitora toda a sua casa. Transformando sua TV Samsung de 70 polegadas em uma central de automação: controle aparelhos inteligentes compatíveis e crie programações de acordo com a sua rotina. Além disso, o Hub do SmartThings já vem integrado, para você conectar a sua TV Samsung a aparelhos inteligentes de outras marcas.\nTransformando tudo a que você assiste em resolução próxima à 4K, com imagens melhores e mais nítidas. Além de ter novo sistema SMARTHUB, que otimiza a sua pesquisa, sugerindo conteúdos com base no que você assiste e usa na sua TV, gastando menos tempo pesquisando e mais tempo assistindo a programas que você gosta.",
                                    "type": "text"
                                },
                                {
                                    "key": "image",
                                    "type": "file",
                                    "src": []
                                },
                                {
                                    "key": "price",
                                    "value": "4799.99",
                                    "type": "text"
                                },
                                {
                                    "key": "width",
                                    "value": "1.56",
                                    "type": "text"
                                },
                                {
                                    "key": "height",
                                    "value": "0.95",
                                    "type": "text"
                                },
                                {
                                    "key": "length",
                                    "value": "0.35",
                                    "type": "text"
                                },
                                {
                                    "key": "weight",
                                    "value": "7.1",
                                    "type": "text"
                                },
                                {
                                    "key": "stockQuantity",
                                    "value": "5",
                                    "type": "text"
                                },
                                {
                                    "key": "isNational",
                                    "value": "false",
                                    "type": "text"
                                },
                                {
                                    "key": "slug",
                                    "value": "smart-tv-samsung-70-crystal-uhd-4k",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/product",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "product"
                            ]
                        },
                        "description": "<small>/product</small>\n### Salva o produto informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** name: Nome do produto;\n- **STR** description (*opcional*): Descrição do produto;\n- **BIN** image (*opcional*): Imagem do produto;\n- **FLT** price: Preço (R$) do produto;\n- **FLT** width: Largura (m) do produto;\n- **FLT** height: Altura (m) do produto;\n- **FLT** length: Tamanho (m) do produto;\n- **FLT** weight: Peso (kg) do produto;\n- **INT** stockQuantity (*opcional*): Quantidade em estoque do produto;\n- **BOOL** isNational (*opcional*): Produto é nacional?;\n- **STR** slug: Slug do produto."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Soundbar Samsung HW-A455",
                                    "type": "text"
                                },
                                {
                                    "key": "description",
                                    "value": "Som poderoso por todos os lados, sincronizando o que acontece na tela com o que você ouve. Amplie a área da emissão do áudio para as laterais e para cima e garanta uma experiência sonora de maior qualidade com a potência de 300w da Soundbar Samsung A455.\nConecte a Soundbar à sua TV através do Bluetooth e curta seu filme com som de cinema sem a complicação de fios espalhados na sala. O subwoofer, para sons graves, também é sem fio. A conexão bluetooth também serve para emparelhar seu celular na Soundbar e escutar sua playlist favorita nos eventos e momentos especiais.",
                                    "type": "text"
                                },
                                {
                                    "key": "price",
                                    "value": "899.99",
                                    "type": "text"
                                },
                                {
                                    "key": "width",
                                    "value": "0.86",
                                    "type": "text"
                                },
                                {
                                    "key": "height",
                                    "value": "0.05",
                                    "type": "text"
                                },
                                {
                                    "key": "length",
                                    "value": "0.07",
                                    "type": "text"
                                },
                                {
                                    "key": "weight",
                                    "value": "18.33",
                                    "type": "text"
                                },
                                {
                                    "key": "stockQuantity",
                                    "value": "5",
                                    "type": "text"
                                },
                                {
                                    "key": "isNational",
                                    "value": "false",
                                    "type": "text"
                                },
                                {
                                    "key": "slug",
                                    "value": "smart-tv-samsung-70-crystal-uhd-4k",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/product/{{newProductId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "product",
                                "{{newProductId}}"
                            ]
                        },
                        "description": "<small>/product/{idProduct}</small>\n### Altera os dados do produto informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idProduct: ID do produto.\n\n##### Body Params\n- **STR** name: Nome do produto;\n- **STR** description (*opcional*): Descrição do produto;\n- **FLT** price: Preço (R$) do produto;\n- **FLT** width: Largura (m) do produto;\n- **FLT** height: Altura (m) do produto;\n- **FLT** length: Tamanho (m) do produto;\n- **FLT** weight: Peso (kg) do produto;\n- **INT** stockQuantity (*opcional*): Quantidade em estoque do produto;\n- **BOOL** isNational (*opcional*): Produto é nacional?;\n- **STR** slug: Slug do produto."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/product/{{newProductId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "product",
                                "{{newProductId}}"
                            ]
                        },
                        "description": "<small>/product/{idProduct}</small>\n### Remove o produto a partir do ID informado na URL\n\n##### Route Params\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "State",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/state?_limit=30&_offset=0&_sortBy=name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "30"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "name"
                                }
                            ]
                        },
                        "description": "<small>/state</small>\n### Retorna todos os estados do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, idCountry, ibgeCode, name, uf)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/state/{{stateId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state",
                                "{{stateId}}"
                            ]
                        },
                        "description": "<small>/state/{idState}</small>\n### Retorna o estado a partir do ID informado na URL\n\n##### Route Params\n- **INT** idState: ID do estado."
                    },
                    "response": []
                },
                {
                    "name": "GET BY COUNTRY",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/country/{{countryId}}/state",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "country",
                                "{{countryId}}",
                                "state"
                            ]
                        },
                        "description": "<small>/country/{idCountry}/state</small>\n### Retorna os estados do país a partir do ID informado na URL\n\n##### Route Params\n- **INT** idCountry: ID do país."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newStateId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idCountry",
                                    "value": "{{countryId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Berlim",
                                    "type": "text"
                                },
                                {
                                    "key": "uf",
                                    "value": "BE",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/state",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state"
                            ]
                        },
                        "description": "<small>/state</small>\n### Salva o estado informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **INT** idCountry: ID do país;\n- **INT** ibgeCode (*opcional*): Código IBGE do estado;\n- **STR** name: Nome do estado;\n- **STR** uf: Unidade federativa."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "idCountry",
                                    "value": "{{countryId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "name",
                                    "value": "Austrália Meridional",
                                    "type": "text"
                                },
                                {
                                    "key": "uf",
                                    "value": "SA",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/state/{{newStateId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state",
                                "{{newStateId}}"
                            ]
                        },
                        "description": "<small>/state/{idState}</small>\n### Altera os dados do estado informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idState: ID do estado.\n\n##### Body Params\n- **INT** idCountry: ID do país;\n- **INT** ibgeCode (*opcional*): Código IBGE do estado;\n- **STR** name: Nome do estado;\n- **STR** uf: Unidade federativa."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/state/{{newStateId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "state",
                                "{{newStateId}}"
                            ]
                        },
                        "description": "<small>/state/{idState}</small>\n### Remove o estado a partir do ID informado na URL\n\n##### Route Params\n- **INT** idState: ID do estado."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Street Type",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/streettype?_limit=50&_offset=0&_sortBy=acronym",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "streettype"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "50"
                                },
                                {
                                    "key": "_offset",
                                    "value": "0"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "acronym"
                                }
                            ]
                        },
                        "description": "<small>/streettype</small>\n### Retorna todos os tipos de logradouro do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, name, acronym)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/streettype/{{streetTypeId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "streettype",
                                "{{streetTypeId}}"
                            ]
                        },
                        "description": "<small>/streettype/{idStreetType}</small>\n### Retorna o tipo de logradouro a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStreetType: ID do tipo de logradouro."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newStreetTypeId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Via de Acesso",
                                    "type": "text"
                                },
                                {
                                    "key": "acronym",
                                    "value": "VAC",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/streettype",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "streettype"
                            ]
                        },
                        "description": "<small>/streettype</small>\n### Salva o tipo de logradouro informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** name: Nome do tipo de logradouro;\n- **STR** acronym (*opcional*): Acrônimo do tipo de logradouro."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Via Expressa",
                                    "type": "text"
                                },
                                {
                                    "key": "acronym",
                                    "value": "V-E",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/streettype/{{newStreetTypeId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "streettype",
                                "{{newStreetTypeId}}"
                            ]
                        },
                        "description": "<small>/streettype/{idStreetType}</small>\n### Altera os dados do tipo de logradouro informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStreetType: ID do tipo de logradouro.\n\n##### Body Params\n- **STR** name: Nome do tipo de logradouro;\n- **STR** acronym (*opcional*): Acrônimo do tipo de logradouro."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/streettype/{{newStreetTypeId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "streettype",
                                "{{newStreetTypeId}}"
                            ]
                        },
                        "description": "<small>/streettype/{idStreetType}</small>\n### Remove o tipo de logradouro a partir do ID informado na URL\n\n##### Route Params\n- **INT** idStreetType: ID do tipo de logradouro."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "User",
            "item": [
                {
                    "name": "ALL",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user?_limit=20&_offset=1&_sortBy=name",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user"
                            ],
                            "query": [
                                {
                                    "key": "_limit",
                                    "value": "20"
                                },
                                {
                                    "key": "_offset",
                                    "value": "1"
                                },
                                {
                                    "key": "_sortBy",
                                    "value": "name"
                                }
                            ]
                        },
                        "description": "<small>/user</small>\n### Retorna todos os usuários do banco de dados\n\n##### Query Params\n- **INT** _limit (*opcional*): Número máximo de registros a serem listados;\n- **INT** _offset (*opcional*): Indica o início da leitura;\n- **INT** _sortBy (*opcional*): Ordenar registros (id, idPerson, login, password, isAdmin, dateRegister, dateLastChange, name, email, cpf, phone, photo)."
                    },
                    "response": []
                },
                {
                    "name": "GET",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200|204\", function () {\r",
                                    "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}"
                            ]
                        },
                        "description": "<small>/user/{idUser}</small>\n### Retorna o usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                },
                {
                    "name": "POST",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});\r",
                                    "\r",
                                    "if (pm.response.code === 201) {\r",
                                    "    pm.collectionVariables.set(\"newUserId\", pm.response.json().id);\r",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "name",
                                    "value": "Tarion Sekoion",
                                    "type": "text"
                                },
                                {
                                    "key": "login",
                                    "value": "tarion",
                                    "type": "text"
                                },
                                {
                                    "key": "password",
                                    "value": "S&k01on",
                                    "type": "text"
                                },
                                {
                                    "key": "email",
                                    "value": "tarion@email.com",
                                    "type": "text"
                                },
                                {
                                    "key": "cpf",
                                    "value": "370.267.320-21",
                                    "type": "text"
                                },
                                {
                                    "key": "phone",
                                    "value": "(96) 98345-8253",
                                    "type": "text"
                                },
                                {
                                    "key": "isAdmin",
                                    "value": "false",
                                    "type": "text"
                                },
                                {
                                    "key": "photo",
                                    "type": "file",
                                    "src": []
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user"
                            ]
                        },
                        "description": "<small>/user</small>\n### Salva o usuário informado no corpo da requisição no banco de dados\n\n##### Body Params\n- **STR** login: Login do usuário;\n- **STR** password: Senha do usuário;\n- **BOOL** isAdmin (*opcional*): Usuário é administrador?;\n- **STR** name: Nome da pessoa;\n- **STR** email: E-mail da pessoa;\n- **STR** cpf (*opcional*): CPF da pessoa;\n- **INT** phone (*opcional*): Número do telefone celular da pessoa;\n- **BIN** photo (*opcional*): Foto da pessoa."
                    },
                    "response": []
                },
                {
                    "name": "PUT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "name",
                                    "value": "Patrick Diniz Mateus",
                                    "type": "text"
                                },
                                {
                                    "key": "login",
                                    "value": "patrick",
                                    "type": "text"
                                },
                                {
                                    "key": "email",
                                    "value": "dinizpatick@email.com",
                                    "type": "text"
                                },
                                {
                                    "key": "cpf",
                                    "value": "686.837.986-23",
                                    "type": "text"
                                },
                                {
                                    "key": "phone",
                                    "value": "(41) 99178-7061",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/{{newUserId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{newUserId}}"
                            ]
                        },
                        "description": "<small>/user/{idUser}</small>\n### Altera os dados do usuário informado no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário.\n\n##### Body Params\n- **STR** login: Login do usuário;\n- **STR** password: Senha do usuário;\n- **BOOL** isAdmin (*opcional*): Usuário é administrador?;\n- **STR** name: Nome da pessoa;\n- **STR** email: E-mail da pessoa;\n- **STR** cpf (*opcional*): CPF da pessoa;\n- **INT** phone (*opcional*): Número do telefone celular da pessoa."
                    },
                    "response": []
                },
                {
                    "name": "DELETE",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{newUserId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{newUserId}}"
                            ]
                        },
                        "description": "<small>/user/{idUser}</small>\n### Remove o usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "User Log",
            "item": [
                {
                    "name": "GET BY USER",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{sessionUserId}}/log",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{sessionUserId}}",
                                "log"
                            ]
                        },
                        "description": "<small>/user/{idUser}/logs</small>\n### Retorna os logs do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "User Password Recovery",
            "item": [
                {
                    "name": "GET BY USER",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/passwordrecovery",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "passwordrecovery"
                            ]
                        },
                        "description": "<small>/user/{idUser}/passwordrecovery</small>\n### Retorna as recuperações de senha do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                },
                {
                    "name": "FORGOT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "email",
                                    "value": "dominio@luizamichi.com.br",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/forgot",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "forgot"
                            ]
                        },
                        "description": "<small>/forgot</small>\n### Envia uma e-mail para restauração de senha\n\n##### Body Params\n- **STR** email: E-mail da pessoa."
                    },
                    "response": []
                },
                {
                    "name": "RESET PASSWORD",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "code",
                                    "value": "bHc9PQ==",
                                    "type": "text"
                                },
                                {
                                    "key": "sk",
                                    "value": "d1RVdmlWUUhaRDdWSW4reWhmR3I3YzAvUEZEOG15VzdaOE9xUnZqMkY3dz0=",
                                    "type": "text"
                                },
                                {
                                    "key": "password",
                                    "value": "andre@R0cha",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/resetpassword",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "resetpassword"
                            ]
                        },
                        "description": "<small>/resetpassword</small>\n### Restaura a senha do usuário\n\n##### Body Params\n- **STR** code: Código de segurança;\n- **STR** sk: Chave de segurança;\n- **STR** password: Nova senha."
                    },
                    "response": []
                },
                {
                    "name": "CHANGE PASSWORD",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "password",
                                    "value": "alfredo",
                                    "type": "text"
                                },
                                {
                                    "key": "newPassword",
                                    "value": "@lFr3d0",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/changepassword",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "changepassword"
                            ]
                        },
                        "description": "<small>/changepassword</small>\n### Altera a senha do usuário da sessão\n\n##### Body Params\n- **STR** password: Senha do usuário;\n- **STR** newPassword: Nova senha do usuário."
                    },
                    "response": []
                },
                {
                    "name": "UPDATE PASSWORD",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "password",
                                    "value": "Jacinta@123",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/password",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "password"
                            ]
                        },
                        "description": "<small>/user/{idUser}/password</small>\n### Altera a senha do usuário informada no corpo da requisição a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário.\n\n##### Body Params\n- **STR** password: Nova senha do usuário."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Wishlist",
            "item": [
                {
                    "name": "GET BY USER",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/product",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "product"
                            ]
                        },
                        "description": "<small>/user/{idUser}/product</small>\n### Retorna a lista de desejos do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário."
                    },
                    "response": []
                },
                {
                    "name": "ADD PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 201 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(201);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/user/{idUser}/product/{idProduct}</small>\n### Adiciona um produto na lista de desejos do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário;\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                },
                {
                    "name": "REMOVE PRODUCT",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"STATUS 200 / JSON BODY\", function () {\r",
                                    "    pm.response.to.have.status(200);\r",
                                    "    pm.response.to.have.jsonBody();\r",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/user/{{userId}}/product/{{productId}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "user",
                                "{{userId}}",
                                "product",
                                "{{productId}}"
                            ]
                        },
                        "description": "<small>/user/{idUser}/product/{idProduct}</small>\n### Remove o produto da lista de desejos do usuário a partir do ID informado na URL\n\n##### Route Params\n- **INT** idUser: ID do usuário;\n- **INT** idProduct: ID do produto."
                    },
                    "response": []
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "URL base",
            "type": "default"
        },
        {
            "key": "sessionUserId",
            "value": "ID do usuário da sessão",
            "type": "default"
        },
        {
            "key": "classIds",
            "value": "IDs das classes",
            "type": "default",
            "disabled": true
        },
        {
            "key": "addressId",
            "value": "ID do endereço",
            "type": "default"
        },
        {
            "key": "cartId",
            "value": "ID do carrinho",
            "type": "default"
        },
        {
            "key": "categoryId",
            "value": "ID da categoria",
            "type": "default"
        },
        {
            "key": "cityId",
            "value": "ID da cidade",
            "type": "default"
        },
        {
            "key": "contactId",
            "value": "ID do contato",
            "type": "default"
        },
        {
            "key": "countryId",
            "value": "ID do país",
            "type": "default"
        },
        {
            "key": "mailId",
            "value": "ID do e-mail",
            "type": "default"
        },
        {
            "key": "orderId",
            "value": "ID do pedido",
            "type": "default"
        },
        {
            "key": "orderStatusId",
            "value": "ID do status do pedido",
            "type": "default"
        },
        {
            "key": "personId",
            "value": "ID da pessoa",
            "type": "default"
        },
        {
            "key": "productId",
            "value": "ID do produto",
            "type": "default"
        },
        {
            "key": "stateId",
            "value": "ID do estado",
            "type": "default"
        },
        {
            "key": "streetTypeId",
            "value": "ID do tipo de logradouro",
            "type": "default"
        },
        {
            "key": "superCategoryId",
            "value": "ID da categoria superior",
            "type": "default"
        },
        {
            "key": "userId",
            "value": "ID do usuário",
            "type": "default"
        },
        {
            "key": "testingIds",
            "value": "IDs dos testes",
            "type": "default",
            "disabled": true
        },
        {
            "key": "newAddessId",
            "value": "Novo ID do endereço",
            "type": "default"
        },
        {
            "key": "newCartId",
            "value": "Novo ID do carrinho",
            "type": "default"
        },
        {
            "key": "newCategoryId",
            "value": "Novo ID da categoria",
            "type": "default"
        },
        {
            "key": "newCityId",
            "value": "Novo ID da cidade",
            "type": "default"
        },
        {
            "key": "newContactId",
            "value": "Novo ID do contato",
            "type": "default"
        },
        {
            "key": "newCountryId",
            "value": "Novo ID do país",
            "type": "default"
        },
        {
            "key": "newMailId",
            "value": "Novo ID do e-mail",
            "type": "default"
        },
        {
            "key": "newOrderId",
            "value": "Novo ID do pedido",
            "type": "default"
        },
        {
            "key": "newOrderStatusId",
            "value": "Novo ID do status do pedido",
            "type": "default"
        },
        {
            "key": "newProductId",
            "value": "Novo ID do produto",
            "type": "default"
        },
        {
            "key": "newStateId",
            "value": "Novo ID do estado",
            "type": "default"
        },
        {
            "key": "newStreetTypeId",
            "value": "Novo ID do tipo de logradouro",
            "type": "default"
        },
        {
            "key": "newUserId",
            "value": "Novo ID do usuário",
            "type": "default"
        }
    ]
}